---
title: PAS Configuration Reference
owner: Release Engineering
---

<%= partial '/pcf/deprecation-notice' %>

This topic is a reference for operators configuring Pivotal Application Service (PAS). While this is a generic topic, there are IaaS-specific instructions that are part of different installation procedures. For IaaS-specific instructions, see the following: 

* [Deploying PAS on AWS](./pcf-aws-manual-er-config.html)
* [Deploying PAS on AWS Using Terraform](./aws-er-config-terraform.html) 
* [Deploying PAS on Azure](./azure-er-config.html) 
* [Deploying PAS on Azure Using Terraform](./azure-er-config-terraform.html) 
* [Deploying PAS on GCP](./gcp-er-config.html) 
* [Deploying PAS on GCP Using Terraform](./gcp-er-config-terraform.html) 
* [Deploying PAS on OpenStack](./openstack-er-config.html) 
* [Deploying PAS on vSphere](./config-er-vmware.html) 

## <a id='assign-az'></a>Assign AZs and Networks

<p class="note"><strong>Note</strong>: For Azure deployments, this pane is labeled <strong>Assign Networks</strong>, and does not include the option to assign AZs.</p>

<%= partial 'assign-azs' %>

## <a id='domain-config'></a> Domains

<%= partial 'domains' %>

## <a id="networking"></a> Networking

<%= partial 'networking-master' %>

## <a id='application-containers-config'></a> Application Containers

<%= partial 'application_container_config' %>

## <a id='appdevctrl-config'></a> Application Developer Controls

<%= partial 'application_developer_controls' %>

## <a id='app-security'></a> Application Security Groups

<%= partial 'application_security_group' %>

## <a id='auth-config'></a> Authentication and Enterprise SSO

<%= partial 'authsso_config' %>

## <a id='uaa'></a>  UAA

<p class="note"><strong>Note:</strong> For GCP installations, Pivotal recommends selecting <strong>External</strong> and using Google Cloud SQL.</p>

<%= partial 'uaa' %>

## <a id='credhub'></a> CredHub

<%= partial '_credhub' %>

## <a id='sys-db'></a> Databases

You can configure PAS to use an internal MySQL database provided with PCF, or you can configure an external database provider for the databases required by PAS.

<p class="note"><strong>Note:</strong> If you are performing an upgrade, do not modify your existing internal database configuration or you may lose data. You must migrate your existing data first before changing the configuration. Contact Pivotal Support for help. See <a href="upgrading-pcf.html">Upgrading Pivotal Cloud Foundry</a> for additional upgrade information.</p>

### <a name='internal-db'></a> Internal Database Configuration

<%= partial 'ert_database_internal' %>

Then proceed to [Step 12: (Optional) Configure Internal MySQL](#internal-mysql) to configure high availability for your internal MySQL databases.

### <a name='create-dbs'></a> External Database Configuration

<%= partial 'ert_database_external' %>

## <a id='internal-mysql'></a> Internal MySQL

<%= partial 'mysql_proxy_config' %>

## <a id='filestore'></a> File Storage

<%= partial 'max_droplets_packages_config' %>

### <a name='cc-filesystem'></a> Select File Storage Location

<%= partial 'filestore_config' %>

#### <a name='internal_filestore'></a> Internal Filestore

<%= partial 'filestore_internal' %>

#### <a name='external'></a> External 

To use an external filestore for PAS, select your desired option and complete the fields. For more information about specific options, see the IaaS-specific topics linked in the introduction. 

## <a id='sys-logging'></a> System Logging

<%= partial '_system_logging' %>

## <a id='customize-apps-man'></a> Custom Branding and Apps Manager 

<%= partial 'custombranding' %> 

## <a id='smtp'></a> Email Notifications

<%= partial 'email-notifs' %>

## <a id='config-autoscaler'></a> App Autoscaler

<%= partial 'app-autoscaler' %>

## <a id='config-cc'></a> Cloud Controller

<%= partial 'cloud-controller' %>

## <a id='config-smoke-test'></a> Smoke Tests

<%= partial 'smoketests' %>

## <a id='advanced'></a>  Advanced Features

<%= partial 'advanced-features' %>

## <a id='errands'></a> Errands

<%= partial 'errands' %>

## <a id='resources'></a> Resource Config

### <a name='lb'></a> Configure Load Balancing

In the Resource Config pane, you can associate load balancers with the VMs in your deployment to enable traffic. See the topic that corresponds to your IaaS and installation method: 

* AWS: [Step 23: Configure Router to Elastic Load Balancers](./pcf-aws-manual-er-config.html#config-elb)
* AWS Terraform: [Step 23: Configure Router (or HAProxy) to Elastic Load Balancer](./aws-er-config-terraform.html#config-elb)
* Azure: [Step 22: Configure Resources](./azure-er-config.html#resources) 
* Azure Terraform: [Step 21: Configure Resources](./azure-er-config-terraform.html#resources) 
* GCP: [Step 24: Configure Load Balancers](./gcp-er-config.html#config-lb) 
* GCP Terraform: [Step 24: Configure Load Balancers](./gcp-er-config-terraform.html#config-lb) 
* OpenStack: [Step 22: Enable Traffic to Private Subnet](./openstack-er-config.html#floating-ips)  

### <a name='scale-down'></a> Scale Down and Disable Resources

<%= partial 'disable_resources' %>


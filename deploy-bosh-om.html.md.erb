---
breadcrumb: Pivotal Cloud Foundry Documentation
title: Deploying BOSH and Ops Manager
owner: PCF Documentation
---

<%= partial '/pcf/deprecation-notice' %>

This topic explains how to deploy BOSH and Ops Manager, the foundation of a Pivotal Cloud Foundry (PCF) platform.

  
## <a id='overview'></a>Overview

[BOSH](http://bosh.io) and [Ops Manager](./ops-man.html) provide the foundation for PCF. When you install PCF, you install the following components first.

* **BOSH** is an open-source tool that lets you run software systems in the cloud.
  - BOSH and its IaaS-specific Cloud Provider Interfaces (CPIs) are what let PCF run on multiple IaaSes.
  - See [Deploying Software with BOSH](#bosh) for a mini overview of how you use BOSH to run software in the cloud.

* **Ops Manager** is a GUI application that streamlines deploying subsequent software to the cloud via BOSH. Ops Manager features are also accessible by API endpoints. For more information, see [Using the Ops Manager API](./ops-man-api.html).
  - For routine tasks, you can use the Ops Manager interface instead of the BOSH command-line interface (CLI), Ops Manager API, or BOSH API.
  - Ops Manager represents PCF products as _tiles_ with multiple configuration panes that let you input or select configuration values needed for the product.
  - Ops Manager generates BOSH manifests containing the user-supplied configuration values, and sends them to the Director.
  - After you install Ops Manager and BOSH, you use Ops Manager to deploy almost all PCF products.

* Deploying Ops Manager deploys both BOSH and Ops Manager with a single procedure.
  - You deploy BOSH and Ops Manager by logging into your IaaS and allocating the network addresses, VMs, user accounts, and other resources needed to support PCF.
  - On AWS, you can deploy Ops Manager manually, or automatically with a Terraform template.
  - On Azure, you can deploy Ops Manager manually, or automatically with a Terraform template, except on Azure Government Cloud and Azure Germany. On those two versions of Azure, you can only deploy Ops Manager manually.

For all of the above, the specifics depend on the IaaS on which you are deploying PCF. The contents of this documentation are organized by IaaS.


## <a id='contents'></a> IaaS-Specific Deployment Guidelines

For information on deploying PCF to your IaaS, choose one of the following:

* Deploying to AWS

  - [Installing PCF on AWS Manually](../om/aws/prepare-env-manual.html)
  - [Installing PCF on AWS Using Terraform](./aws-terraform.html)

* Deploying to Azure

  - [Installing PCF on Azure Manually](./pcf-azure-manual-config.html)
  - [Installing PCF on Azure Using Terraform](./azure-terraform.html)

* Deploying to GCP

  - [Installing PCF on GCP Manually](./gcp-manual.html)
  - [Installing PCF on GCP Using Terraform](./gcp-terraform.html)

* Deploying to OpenStack

  - [Installing Pivotal Cloud Foundry on OpenStack](./openstack.html)

* Deploying to vSphere

  - [Installing Pivotal Cloud Foundry on vSphere](./vsphere.html)


## <a id='bosh'></a> Deploying Software with BOSH

The following describes how you can use BOSH to run software in the cloud:

1. You create a _BOSH release_, a directory that contains your software and anything that it depends on or needs to run on generic, empty VMs.

1. You create a _manifest_ `.yml` file that identifies the component processes in the BOSH release, specifies the VMs they run on, how they communicate, how to start them up and shut them down, and any other configuration specifics that they need.

1. Using the BOSH command-line interface (CLI) or API, you upload the BOSH release and send the manifest to the _Director_, BOSH's executive process.

1. The Director provisions what it needs from the IaaS, _deploys_ your software to run in the cloud, and heals automatically when VMs go down.

1. BOSH CLI and API commands let you control BOSH-managed processes and allocate or release IaaS resources.
